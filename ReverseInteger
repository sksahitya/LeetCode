/* https://leetcode.com/problems/reverse-integer/ */

/*

Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−2^31,  2^31 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

*/

class Solution {
        public int reverse(int x) {
        int op = 0;
		boolean isNegative = false;
		if(x < 0){
			isNegative = true;
			x = Math.abs(x);
		}
		while (x > 0) { //12
            if(op > Integer.MAX_VALUE/10)
				return 0;
			op = op * 10 + (x % 10);//43
			x = x / 10;//12
		}

		//op = op*10 + x;
		if(isNegative)
			op = -op;
		return op;

        }
}
